#!/usr/bin/env node
'use strict';

var ArgumentParser  = require('argparse').ArgumentParser
  , PicoParser      = require('./lib/parser.js')
  , fs              = require('fs')
  , typechecker     = require('./lib/typeCheck.js')
  , util            = require('util');


var parser = new ArgumentParser({
	version: '0.0.1',
	addHelp: true,
	description: 'Pico Language utilities written in NodeJS'
});
parser.addArgument(
	[ '-c', '--compile' ],
	{
		help: 'Compiles the script at the path specified.'
	}
);
parser.addArgument(
  [ '-t', '--typecheck' ],
  {
    help: 'Checks the types inside the given script.'
  }
);
parser.addArgument(
  [ '-p', '--parse' ],
  {
    help: 'Outputs the JSON generated by the parser.'
  }
);
var args = parser.parseArgs();

if(args.parse) {
  fs.readFile(args.parse, "utf8", function (err, data) {
    if(err) throw err;
    var picoProgram = PicoParser.parse(data);
    console.log(util.inspect(picoProgram, { colors: true, depth: 20}));
  });
}

if(args.typecheck) {
  fs.readFile(args.typecheck, "utf8", function (err, data) {
    if(err) throw err;
    var picoProgram = PicoParser.parse(data);
    typechecker(picoProgram);
  });
}