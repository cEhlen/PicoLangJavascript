#!/usr/bin/env node
'use strict';

var ArgumentParser  = require('argparse').ArgumentParser
  , PicoParser      = require('./lib/parser.js')()
  , ProcessPipeline = require('./lib/processPipeline.js')
  , fs              = require('fs')
  , util            = require('util');


var parser = new ArgumentParser({
    version: '0.0.1',
    addHelp: true,
    description: 'Pico Language utilities written in NodeJS'
});
parser.addArgument(
    ['file']
);
parser.addArgument(
    [ '-c', '--compile' ],
    {
      help: 'Compiles the script at the path specified.',
      action: "storeTrue"
    }
);
parser.addArgument(
  [ '-t', '--typecheck' ],
  {
    help: 'Checks the types inside the given script.',
    action: "storeTrue"
  }
);
parser.addArgument(
  [ '-p', '--parse' ],
  {
    help: 'Outputs the JSON generated by the parser.',
    action: "storeTrue"
  }
);
parser.addArgument(
  [ '-o', '--output' ],
  {
    nargs: 1,
    defaultValue: 'picoNode',
    help: 'The file to output to. We output more than one file, so we postfix the files with the option.'
  }
);
parser.addArgument(
  [ '-l', '--log' ],
  {
    action: 'storeTrue',
    help: 'Outputs everything to the console'
  }
);

var args = parser.parseArgs();

var processPipe = ProcessPipeline(args);
fs.createReadStream(args.file).pipe(PicoParser).pipe(processPipe);